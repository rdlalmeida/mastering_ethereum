{
  "contractName": "Faucet",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback",
      "payable": true
    },
    {
      "inputs": [],
      "name": "destroy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "withdraw_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"withdraw_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Faucet.sol\":\"Faucet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Faucet.sol\":{\"keccak256\":\"0x9d94b0c79e2cdadc3e79a7f0dc4df6b731cdb8c807d5082e8aadf67f04d3ea36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c996538eb709ecad80f2888164c9694b6f9002afa6a9690550f52f516e036e99\",\"dweb:/ipfs/QmUxZHSpEwoqcbpLSr463B2Rjx6vmvxsQGyEGQcuX2d7qn\"]},\"project:/contracts/mortal.sol\":{\"keccak256\":\"0x3cc023d0490e28c843957ccc1cfbb9458c7dcadd38f00f55340e740e0b69eb3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c407fe3834e9867474ac41d1be0fe141732376cc60cf05c8106babc91af7ecf\",\"dweb:/ipfs/QmS4j2f15NnoYwZc1x9tXPAuyLtKz1pFfS8KGZGSSuxDjo\"]},\"project:/contracts/owned.sol\":{\"keccak256\":\"0x19f4c31327392b7ce5b72fc636d5705ae61ae3e2b03df2b1966e1170db34307a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45ddab0f5de62d2f685f17dafd306bf55da8a28c0d5d17dfbe64af478801fca6\",\"dweb:/ipfs/QmcJqHDBFzwitQWqe1LoazwmMYaUfwtkaLtxw23mVbUT6V\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610478806100606000396000f3fe60806040526004361061002d5760003560e01c80632e1a7d4d1461008457806383197ef0146100ad57610082565b36610082573373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c346040516100789190610294565b60405180910390a2005b005b34801561009057600080fd5b506100ab60048036038101906100a691906102e0565b6100c4565b005b3480156100b957600080fd5b506100c26101ea565b005b67016345785d8a000081111561010f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010690610390565b60405180910390fd5b80471015610152576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014990610422565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610198573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65826040516101df9190610294565b60405180910390a250565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461024257600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000819050919050565b61028e8161027b565b82525050565b60006020820190506102a96000830184610285565b92915050565b600080fd5b6102bd8161027b565b81146102c857600080fd5b50565b6000813590506102da816102b4565b92915050565b6000602082840312156102f6576102f56102af565b5b6000610304848285016102cb565b91505092915050565b600082825260208201905092915050565b7f4d6178696d756d20616c6c6f776564207769746864726177206973206f66203060008201527f2e31206574686572210000000000000000000000000000000000000000000000602082015250565b600061037a60298361030d565b91506103858261031e565b604082019050919050565b600060208201905081810360008301526103a98161036d565b9050919050565b7f496e73756666696369656e742062616c616e636520696e20746865206661756360008201527f657420666f72207769746864726177616c207265717565737421000000000000602082015250565b600061040c603a8361030d565b9150610417826103b0565b604082019050919050565b6000602082019050818103600083015261043b816103ff565b905091905056fea264697066735822122000d6cfd776ad0bcb3c987cdbe42fa63ee3de7280ae7eb7c5696a529fd96a4ad064736f6c63430008130033",
  "deployedBytecode": "0x60806040526004361061002d5760003560e01c80632e1a7d4d1461008457806383197ef0146100ad57610082565b36610082573373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c346040516100789190610294565b60405180910390a2005b005b34801561009057600080fd5b506100ab60048036038101906100a691906102e0565b6100c4565b005b3480156100b957600080fd5b506100c26101ea565b005b67016345785d8a000081111561010f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010690610390565b60405180910390fd5b80471015610152576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014990610422565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610198573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65826040516101df9190610294565b60405180910390a250565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461024257600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000819050919050565b61028e8161027b565b82525050565b60006020820190506102a96000830184610285565b92915050565b600080fd5b6102bd8161027b565b81146102c857600080fd5b50565b6000813590506102da816102b4565b92915050565b6000602082840312156102f6576102f56102af565b5b6000610304848285016102cb565b91505092915050565b600082825260208201905092915050565b7f4d6178696d756d20616c6c6f776564207769746864726177206973206f66203060008201527f2e31206574686572210000000000000000000000000000000000000000000000602082015250565b600061037a60298361030d565b91506103858261031e565b604082019050919050565b600060208201905081810360008301526103a98161036d565b9050919050565b7f496e73756666696369656e742062616c616e636520696e20746865206661756360008201527f657420666f72207769746864726177616c207265717565737421000000000000602082015250565b600061040c603a8361030d565b9150610417826103b0565b604082019050919050565b6000602082019050818103600083015261043b816103ff565b905091905056fea264697066735822122000d6cfd776ad0bcb3c987cdbe42fa63ee3de7280ae7eb7c5696a529fd96a4ad064736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3628:3",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "73:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:3",
                "type": ""
              }
            ],
            "src": "7:77:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "155:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "172:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "195:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "177:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "177:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "165:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "165:37:3"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "143:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "150:3:3",
                "type": ""
              }
            ],
            "src": "90:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "312:124:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "322:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "334:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "345:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "330:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "330:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "322:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "402:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "415:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "426:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "411:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "411:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "358:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "358:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "358:71:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "284:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "296:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "307:4:3",
                "type": ""
              }
            ],
            "src": "214:222:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "482:35:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "492:19:3",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "508:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "502:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "502:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "492:6:3"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "475:6:3",
                "type": ""
              }
            ],
            "src": "442:75:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "612:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "629:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "632:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "622:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "622:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "622:12:3"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "523:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "735:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "752:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "755:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "745:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "745:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "745:12:3"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "646:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "812:79:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "869:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "878:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "881:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "871:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "871:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "871:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "835:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "860:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "842:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "842:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "832:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "832:35:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "825:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "825:43:3"
                  },
                  "nodeType": "YulIf",
                  "src": "822:63:3"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "805:5:3",
                "type": ""
              }
            ],
            "src": "769:122:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "949:87:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "959:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "981:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "968:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "968:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "959:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1024:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "997:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "997:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "997:33:3"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "927:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "935:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "943:5:3",
                "type": ""
              }
            ],
            "src": "897:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1108:263:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1154:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1156:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1156:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1156:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1129:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1138:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1125:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1125:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1150:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1121:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1121:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1118:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1247:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1262:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1276:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1266:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1291:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1326:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1337:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1322:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1322:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1346:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1301:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1301:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1291:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1078:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1089:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1101:6:3",
                "type": ""
              }
            ],
            "src": "1042:329:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1473:73:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1490:3:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1495:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1483:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1483:19:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1483:19:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1511:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1530:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1535:4:3",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1526:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1526:14:3"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1511:11:3"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1445:3:3",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1450:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1461:11:3",
                "type": ""
              }
            ],
            "src": "1377:169:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1658:122:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1680:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1688:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1676:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1676:14:3"
                      },
                      {
                        "hexValue": "4d6178696d756d20616c6c6f776564207769746864726177206973206f662030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1692:34:3",
                        "type": "",
                        "value": "Maximum allowed withdraw is of 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1669:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1669:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1669:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1748:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1756:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1744:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1744:15:3"
                      },
                      {
                        "hexValue": "2e3120657468657221",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1761:11:3",
                        "type": "",
                        "value": ".1 ether!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1737:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1737:36:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1737:36:3"
                }
              ]
            },
            "name": "store_literal_in_memory_b2ef88858b2563da9f5c17b99d8e49670e5d648dec570550c03975a0368ccfbb",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1650:6:3",
                "type": ""
              }
            ],
            "src": "1552:228:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1932:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1942:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2008:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2013:2:3",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1949:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1949:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1942:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2114:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_b2ef88858b2563da9f5c17b99d8e49670e5d648dec570550c03975a0368ccfbb",
                      "nodeType": "YulIdentifier",
                      "src": "2025:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2025:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2025:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2127:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2138:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2143:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2134:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2134:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2127:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b2ef88858b2563da9f5c17b99d8e49670e5d648dec570550c03975a0368ccfbb_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1920:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1928:3:3",
                "type": ""
              }
            ],
            "src": "1786:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2329:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2339:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2351:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2362:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2347:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2347:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2339:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2386:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2397:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2382:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2382:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2405:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2411:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2401:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2401:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2375:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2375:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2375:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2431:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2565:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b2ef88858b2563da9f5c17b99d8e49670e5d648dec570550c03975a0368ccfbb_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2439:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2439:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2431:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b2ef88858b2563da9f5c17b99d8e49670e5d648dec570550c03975a0368ccfbb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2309:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2324:4:3",
                "type": ""
              }
            ],
            "src": "2158:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2689:139:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2711:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2719:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2707:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2707:14:3"
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e636520696e207468652066617563",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2723:34:3",
                        "type": "",
                        "value": "Insufficient balance in the fauc"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2700:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2700:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2700:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2779:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2787:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2775:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2775:15:3"
                      },
                      {
                        "hexValue": "657420666f72207769746864726177616c207265717565737421",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2792:28:3",
                        "type": "",
                        "value": "et for withdrawal request!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2768:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2768:53:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2768:53:3"
                }
              ]
            },
            "name": "store_literal_in_memory_26e29cda6d749421d8c195719526dd1bf4ede12b8096bc41ddd58fd6237401f0",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2681:6:3",
                "type": ""
              }
            ],
            "src": "2583:245:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2980:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2990:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3056:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3061:2:3",
                        "type": "",
                        "value": "58"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2997:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2997:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2990:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3162:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_26e29cda6d749421d8c195719526dd1bf4ede12b8096bc41ddd58fd6237401f0",
                      "nodeType": "YulIdentifier",
                      "src": "3073:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3073:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3073:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3175:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3186:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3191:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3182:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3182:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3175:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_26e29cda6d749421d8c195719526dd1bf4ede12b8096bc41ddd58fd6237401f0_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2968:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2976:3:3",
                "type": ""
              }
            ],
            "src": "2834:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3377:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3387:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3399:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3410:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3395:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3395:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3387:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3434:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3445:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3430:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3430:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3453:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3459:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3449:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3449:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3423:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3423:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3423:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3479:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3613:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_26e29cda6d749421d8c195719526dd1bf4ede12b8096bc41ddd58fd6237401f0_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3487:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3487:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3479:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_26e29cda6d749421d8c195719526dd1bf4ede12b8096bc41ddd58fd6237401f0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3357:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3372:4:3",
                "type": ""
              }
            ],
            "src": "3206:419:3"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b2ef88858b2563da9f5c17b99d8e49670e5d648dec570550c03975a0368ccfbb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Maximum allowed withdraw is of 0\")\n\n        mstore(add(memPtr, 32), \".1 ether!\")\n\n    }\n\n    function abi_encode_t_stringliteral_b2ef88858b2563da9f5c17b99d8e49670e5d648dec570550c03975a0368ccfbb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_b2ef88858b2563da9f5c17b99d8e49670e5d648dec570550c03975a0368ccfbb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b2ef88858b2563da9f5c17b99d8e49670e5d648dec570550c03975a0368ccfbb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b2ef88858b2563da9f5c17b99d8e49670e5d648dec570550c03975a0368ccfbb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_26e29cda6d749421d8c195719526dd1bf4ede12b8096bc41ddd58fd6237401f0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance in the fauc\")\n\n        mstore(add(memPtr, 32), \"et for withdrawal request!\")\n\n    }\n\n    function abi_encode_t_stringliteral_26e29cda6d749421d8c195719526dd1bf4ede12b8096bc41ddd58fd6237401f0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 58)\n        store_literal_in_memory_26e29cda6d749421d8c195719526dd1bf4ede12b8096bc41ddd58fd6237401f0(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_26e29cda6d749421d8c195719526dd1bf4ede12b8096bc41ddd58fd6237401f0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_26e29cda6d749421d8c195719526dd1bf4ede12b8096bc41ddd58fd6237401f0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 3,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "115:839:0:-:0;;;;;;;;;;;;;143:10:2;127:5;;:27;;;;;;;;;;;;;;;;;;115:839:0;;;;;;",
  "deployedSourceMap": "115:839:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;860:10;852:30;;;872:9;852:30;;;;;;:::i;:::-;;;;;;;;115:839;;;270:478;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;140:63:1;;;;;;;;;;;;;:::i;:::-;;270:478:0;402:9;383:15;:28;;375:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;494:15;469:21;:40;;461:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;658:10;650:28;;:45;679:15;650:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;716:10;705:39;;;728:15;705:39;;;;;;:::i;:::-;;;;;;;;270:478;:::o;140:63:1:-;206:5:2;;;;;;;;;;192:19;;:10;:19;;;184:28;;;;;;193:5:1::1;::::0;::::1;;;;;;;;180:19;;;7:77:3::0;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:169::-;1461:11;1495:6;1490:3;1483:19;1535:4;1530:3;1526:14;1511:29;;1377:169;;;;:::o;1552:228::-;1692:34;1688:1;1680:6;1676:14;1669:58;1761:11;1756:2;1748:6;1744:15;1737:36;1552:228;:::o;1786:366::-;1928:3;1949:67;2013:2;2008:3;1949:67;:::i;:::-;1942:74;;2025:93;2114:3;2025:93;:::i;:::-;2143:2;2138:3;2134:12;2127:19;;1786:366;;;:::o;2158:419::-;2324:4;2362:2;2351:9;2347:18;2339:26;;2411:9;2405:4;2401:20;2397:1;2386:9;2382:17;2375:47;2439:131;2565:4;2439:131;:::i;:::-;2431:139;;2158:419;;;:::o;2583:245::-;2723:34;2719:1;2711:6;2707:14;2700:58;2792:28;2787:2;2779:6;2775:15;2768:53;2583:245;:::o;2834:366::-;2976:3;2997:67;3061:2;3056:3;2997:67;:::i;:::-;2990:74;;3073:93;3162:3;3073:93;:::i;:::-;3191:2;3186:3;3182:12;3175:19;;2834:366;;;:::o;3206:419::-;3372:4;3410:2;3399:9;3395:18;3387:26;;3459:9;3453:4;3449:20;3445:1;3434:9;3430:17;3423:47;3487:131;3613:4;3487:131;:::i;:::-;3479:139;;3206:419;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\nimport \"./mortal.sol\";\n\n// Basic Faucet contract\ncontract Faucet is mortal {\n\tevent Withdrawal(address indexed to, uint amount);\n\tevent Deposit(address indexed from, uint amount);\n\n\t// Withdraw function\n\tfunction withdraw(uint withdraw_amount) public {\n\t\t// Establish the minimal withdraw amount to 0.1 ETH\n\t\trequire(withdraw_amount <= 0.1 ether, \"Maximum allowed withdraw is of 0.1 ether!\");\n\t\trequire(address(this).balance >= withdraw_amount, \"Insufficient balance in the faucet for withdrawal request!\");\n\n\t\t// Transfer the required amount to the account executing this function\n\t\tpayable(msg.sender).transfer(withdraw_amount);\n\n\t\temit Withdrawal(msg.sender, withdraw_amount);\n\t}\n\n\t// Empty receive function just to keep the standards up to date\n\treceive() external payable {\n\t\temit Deposit(msg.sender, msg.value);\n\t}\n\n\t// And the fallback function\n\tfallback() external payable {\n\n\t}\n}",
  "sourcePath": "D:\\OtherDocuments\\Github_repos\\mastering_ethereum\\1_faucet\\contracts\\Faucet.sol",
  "ast": {
    "absolutePath": "project:/contracts/Faucet.sol",
    "exportedSymbols": {
      "Faucet": [
        71
      ],
      "mortal": [
        87
      ],
      "owned": [
        115
      ]
    },
    "id": 72,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "absolutePath": "project:/contracts/mortal.sol",
        "file": "./mortal.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 72,
        "sourceUnit": 88,
        "src": "66:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "mortal",
              "nameLocations": [
                "134:6:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 87,
              "src": "134:6:0"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "134:6:0"
          }
        ],
        "canonicalName": "Faucet",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 71,
        "linearizedBaseContracts": [
          71,
          87,
          115
        ],
        "name": "Faucet",
        "nameLocation": "124:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "eventSelector": "7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65",
            "id": 10,
            "name": "Withdrawal",
            "nameLocation": "150:10:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "177:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "161:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "161:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "186:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "181:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "181:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "160:33:0"
            },
            "src": "144:50:0"
          },
          {
            "anonymous": false,
            "eventSelector": "e1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c",
            "id": 16,
            "name": "Deposit",
            "nameLocation": "202:7:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "226:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 16,
                  "src": "210:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "210:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "237:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 16,
                  "src": "232:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "232:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "209:35:0"
            },
            "src": "196:49:0"
          },
          {
            "body": {
              "id": 54,
              "nodeType": "Block",
              "src": "317:431:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 22,
                          "name": "withdraw_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "383:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "302e31",
                          "id": 23,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "402:9:0",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        },
                        "src": "383:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6178696d756d20616c6c6f776564207769746864726177206973206f6620302e3120657468657221",
                        "id": 25,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "413:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b2ef88858b2563da9f5c17b99d8e49670e5d648dec570550c03975a0368ccfbb",
                          "typeString": "literal_string \"Maximum allowed withdraw is of 0.1 ether!\""
                        },
                        "value": "Maximum allowed withdraw is of 0.1 ether!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b2ef88858b2563da9f5c17b99d8e49670e5d648dec570550c03975a0368ccfbb",
                          "typeString": "literal_string \"Maximum allowed withdraw is of 0.1 ether!\""
                        }
                      ],
                      "id": 21,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "375:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "375:82:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "375:82:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 35,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 31,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "477:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Faucet_$71",
                                  "typeString": "contract Faucet"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Faucet_$71",
                                  "typeString": "contract Faucet"
                                }
                              ],
                              "id": 30,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "469:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 29,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "469:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 32,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "469:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 33,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "483:7:0",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "469:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 34,
                          "name": "withdraw_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "494:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "469:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e636520696e207468652066617563657420666f72207769746864726177616c207265717565737421",
                        "id": 36,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "511:60:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26e29cda6d749421d8c195719526dd1bf4ede12b8096bc41ddd58fd6237401f0",
                          "typeString": "literal_string \"Insufficient balance in the faucet for withdrawal request!\""
                        },
                        "value": "Insufficient balance in the faucet for withdrawal request!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26e29cda6d749421d8c195719526dd1bf4ede12b8096bc41ddd58fd6237401f0",
                          "typeString": "literal_string \"Insufficient balance in the faucet for withdrawal request!\""
                        }
                      ],
                      "id": 28,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "461:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "461:111:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "461:111:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45,
                        "name": "withdraw_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "679:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 41,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "658:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 42,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "662:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "658:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 40,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "650:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 39,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "650:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "650:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "670:8:0",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "650:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "650:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "650:45:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 49,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "716:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "720:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "716:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 51,
                        "name": "withdraw_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "728:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 48,
                      "name": "Withdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "705:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "705:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53,
                  "nodeType": "EmitStatement",
                  "src": "700:44:0"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 55,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "279:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18,
                  "mutability": "mutable",
                  "name": "withdraw_amount",
                  "nameLocation": "293:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "288:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "288:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "287:22:0"
            },
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "317:0:0"
            },
            "scope": 71,
            "src": "270:478:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 65,
              "nodeType": "Block",
              "src": "843:43:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 59,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "860:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "864:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "860:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 61,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "872:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "876:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "872:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 58,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "852:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "852:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64,
                  "nodeType": "EmitStatement",
                  "src": "847:35:0"
                }
              ]
            },
            "id": 66,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "823:2:0"
            },
            "returnParameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "843:0:0"
            },
            "scope": 71,
            "src": "816:70:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "947:5:0",
              "statements": []
            },
            "id": 70,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "927:2:0"
            },
            "returnParameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "947:0:0"
            },
            "scope": 71,
            "src": "919:33:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 72,
        "src": "115:839:0",
        "usedErrors": []
      }
    ],
    "src": "32:922:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x2795d7b3bdf4060980Af31291476091D41B03272",
      "transactionHash": "0xdea5909575a3a3203099adf01fe99dc208804f4fa045b6f4dbf4092453325536"
    }
  },
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-05-16T23:13:23.530Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}