# NOTE: These values must be deleted from this file AFTER the .encryptedKey.json file has been created
# I left them here on purpose to illustrate the process, but in a PROD environment this is the way to go after
# getting all the sensible data properly encrypted!
# ----------------------- DELETE IN PROD ---------------------------------------
LOCAL_PRIVATE_KEY=0x66be649e52a082f0e7eb8bda3600c8e0a3c7964a167258fb70facd8997bc67a0
# ----------------------- DELETE IN PROD ---------------------------------------

# It is also possible to delete the password from this file and provide it only during the file execution using:
# $ LOCAL_PRIVATE_KEY_PASSWORD=THisISNotAGOOdPAsswORd! node deploy.js
#
# This command sets the global variable PRIVATE_KEY_PASSWORD to the value after '=' during the execution of the deploy.js
# file. This requires you to memorize the password value, at least.
LOCAL_PRIVATE_KEY_PASSWORD=THisISNotAGOOdPAsswORd!
LOCAL_ENDPOINT=http://localhost:7545
LOCAL_ENCRYPTED_KEY_FILENAME='.encryptedLocalKey.json'

SEPOLIA_PRIVATE_KEY=905579f4e781a6231504e6e4dd268d614ffef0692e2ba80849cd1cdf401a37c8
SEPOLIA_PRIVATE_KEY_PASSWORD=SepoLIAPassWORD$$
# This particular Sepolia endpoint was provided by Alchemy. Login into the Alchemy website and check the projects to retrieve it
# Another popular alternative, which I had used in the past, is Infure. I have an account on that one too
SEPOLIA_ENDPOINT=https://eth-sepolia.g.alchemy.com/v2/Ea7uFDt4btGS5v6YiQhwR-9DWEKNeDKe
SEPOLIA_ENCRYPTED_KEY_FILENAME='.encryptedSepoliaKey.json';

ENCODING="utf8"

CURRENT_ENVIRONMENT="sepolia"